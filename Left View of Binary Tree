/* A binary tree node

struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int x){
        data = x;
        left = right = NULL;
    }
};
 */

//Function to return a list containing elements of left view of the binary tree.
vector<int> leftView(Node *root)
{
   // Your code here
   queue<Node *> q;
   vector<int> v;
   int f=0;
   q.push(root);
   q.push(NULL);
   
   while(!q.empty()){
        Node *k=q.front();
           q.pop();
       while(k!=NULL){
          
            if(k->left!=NULL ){
               q.push(k->left);
               if(f==0) {v.push_back(k->left->data);
                f=1;
               }
            
             }
          else if(k->right!=NULL && f=0){
                 q.push(k->right);
                 if(f==0) {
                     v.push_back(k->right->data);
                     f=1;
             }
       }}
       q.push(NULL);
       q.pop();
       f=0;
   }
   
}
