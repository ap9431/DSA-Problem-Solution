class Solution {
  public:
    // Function to return a list containing the DFS traversal of the graph.
    
    void dfs(vector<int> &vis,vector<int> a[],vector<int> &res,int n){
        
        res.push_back(n);
                 vis[n]=1;
        
        for(auto adj:a[n]){
            if(!vis[adj]){
                
                dfs(vis,a,res,adj);
            }
        }
        return;
        
    }
    
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        // Code here
       
        vector<int> vis(V,0);
        vector<int> res;
        
        dfs(vis,adj,res,0);
        
        return res;
    }
};
